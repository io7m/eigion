<?xml version="1.0" encoding="UTF-8" ?>

<Schemas xmlns="urn:com.io7m.trasco.database.statements:1:0">
  <Schema versionCurrent="0">
    <Comment>
      The eigion role is a least-privilege role that can perform only those operations required to run the system and no
      others.
    </Comment>

    <Statement><![CDATA[
create role eigion with nosuperuser nocreatedb nocreaterole noinherit nologin;
]]></Statement>

    <Comment>
      The eigion_none role is a no-privilege role that cannot perform any actions.
    </Comment>

    <Statement><![CDATA[
create role eigion_none with nosuperuser nocreatedb nocreaterole noinherit nologin;
]]></Statement>

    <Comment>
      The schema version table stores the current version of the database schema. Implementations are expected to query
      this table on connecting to the database in order to ensure that the calling code is compatible with the tables in
      the database.
    </Comment>

    <Statement><![CDATA[
create table schema_version (
  version_lock   char(1) not null default 'x',
  version_number bigint  not null,

  constraint check_lock_primary primary key (version_lock),
  constraint check_lock_locked check (version_lock = 'x')
)
]]></Statement>
  </Schema>

  <Schema versionCurrent="1">
    <Comment>
      The user_ids table stores the ids for users and admins.
    </Comment>

    <Statement><![CDATA[
create table user_ids (
  id uuid not null primary key
)
]]></Statement>

    <Statement>grant select, insert on user_ids to eigion</Statement>

    <Comment>
      The admins table stores the current set of admins.
    </Comment>

    <Statement><![CDATA[
create table admins (
  id               uuid                     not null primary key,
  name             varchar(1000000)         not null unique,
  email            varchar(1000000)         not null unique,
  created          timestamp with time zone not null,
  last_login_time  timestamp with time zone not null,
  password_algo    varchar(1000000)         not null,
  password_hash    varchar(1000000)         not null,
  password_salt    varchar(1000000)         not null,

  foreign key (id) references user_ids (id)
)
]]></Statement>

    <Statement>grant select, insert, update on admins to eigion</Statement>
    <Statement>grant select (id) on admins to eigion_none</Statement>

    <Comment>
      The users table stores the current set of users.
    </Comment>

    <Statement><![CDATA[
create table users (
  id               uuid                     not null primary key,
  name             varchar(1000000)         not null unique,
  email            varchar(1000000)         not null unique,
  created          timestamp with time zone not null,
  last_login_time  timestamp with time zone not null,
  password_algo    varchar(1000000)         not null,
  password_hash    varchar(1000000)         not null,
  password_salt    varchar(1000000)         not null,

  foreign key (id) references user_ids (id)
)
]]></Statement>

    <Statement>grant select, insert, update on users to eigion</Statement>
    <Statement>grant select (id) on users to eigion_none</Statement>

    <Comment>
      The user_user_complaints table stores the current set of complaints that have been lodged by users against other
      users. This could be, for example, due to a user adopting an offensive display name.
    </Comment>

    <Statement><![CDATA[
create type complaint_status as enum ('UNRESOLVED', 'RESOLVED_INVALID', 'RESOLVED_VALID');
]]></Statement>

    <Statement><![CDATA[
create table user_user_complaints (
  id               bigint                   not null primary key generated always as identity,
  user_complainer  uuid                     not null,
  user_target      uuid                     not null,
  created          timestamp with time zone not null,
  reason           varchar(1000000)         not null,

  resolved           complaint_status not null,
  resolution_admin   uuid,
  resolution_reason  varchar(1000000),
  resolution_time    timestamp with time zone,

  constraint resolution_valid check (
        ((resolved != 'UNRESOLVED') = (resolution_admin is not null))
    and ((resolved != 'UNRESOLVED') = (resolution_reason is not null))
    and ((resolved != 'UNRESOLVED') = (resolution_time is not null))
  ),

  unique (user_complainer, user_target),

  foreign key (resolution_admin) references admins (id),
  foreign key (user_complainer)  references users (id),
  foreign key (user_target)      references users (id)
)
]]></Statement>

    <Statement>grant select, insert, update on user_user_complaints to eigion</Statement>

    <Comment>
      The user_bans table stores the set of users that might be banned for any reason.
    </Comment>

    <Statement><![CDATA[
create table user_bans (
  id       bigint                    not null primary key generated always as identity,
  user_id  uuid                      not null unique,
  expires  timestamp with time zone,
  reason   varchar(1000000)          not null,

  foreign key (user_id) references users (id)
)
]]></Statement>

    <Statement>grant select, insert, update, delete on user_bans to eigion</Statement>

    <Comment>
      The groups table holds groups. A product is produced by exactly one group, and users may be in one or more
      groups. Users cannot create groups directly, so a creator_admin will have created each group on behalf of
      creator_user.
    </Comment>

    <Statement><![CDATA[
create table groups (
  id             bigint                    not null primary key generated always as identity,
  name           varchar(1000000)          not null unique,
  creator_admin  uuid                      not null,
  creator_user   uuid                      not null,
  created        timestamp with time zone  not null,

  foreign key (creator_user) references users (id),
  foreign key (creator_admin) references admins (id)
)
]]></Statement>

    <Statement>grant select, insert on groups to eigion</Statement>

    <Comment>
      The group_users table associates users with groups. A group always has at least one user; the user that
      created the group is marked as the "founder" and may not ever leave the group.
    </Comment>

    <Statement><![CDATA[
create table group_users (
  id        bigint           not null primary key generated always as identity,
  user_id   uuid             not null,
  group_id  bigint           not null,
  roles     varchar(1000000) not null,

  unique (user_id, group_id),

  foreign key (user_id) references users (id),
  foreign key (group_id) references groups (id)
)
]]></Statement>

    <Statement>grant insert, select, delete on group_users to eigion</Statement>
    <Statement>grant update (roles) on group_users to eigion</Statement>

    <Comment>
      The audit table stores a list of auditable events. Who did it? What did they do? When did they do it?
    </Comment>

    <Statement><![CDATA[
create table audit (
  id      bigint                   not null primary key generated always as identity,
  user_id uuid                     not null,
  time    timestamp with time zone not null,
  type    varchar(1000000)         not null,
  message varchar(1000000)         not null,

  foreign key (user_id) references user_ids (id)
)
]]></Statement>

    <Statement>grant insert, select on audit to eigion</Statement>
  </Schema>

  <Schema versionCurrent="2">
    <Comment>
      The images table holds image data.
    </Comment>

    <Statement><![CDATA[
create table images (
  id         uuid                     not null primary key,
  creator    uuid                     not null,
  created    timestamp with time zone not null,
  hash_algo  varchar(1000000)         not null,
  hash_value varchar(1000000)         not null,

  foreign key (creator) references users (id)
)
]]></Statement>

    <Statement>grant select, insert on images to eigion</Statement>

    <Comment>
      The image_redactions table holds the set of images that have been redacted.
    </Comment>

    <Statement><![CDATA[
create table image_redactions (
  image   uuid                     not null unique,
  reason  varchar(1000000)         not null,
  creator uuid                     not null,
  created timestamp with time zone not null,

  foreign key (creator) references users (id),
  foreign key (image)   references images (id)
)
]]></Statement>

    <Statement>grant select, delete, insert on image_redactions to eigion</Statement>

    <Comment>
      The categories table holds the set of categories that can be applied to products.
    </Comment>

    <Statement><![CDATA[
create table categories (
  id      bigint                   not null primary key generated always as identity,
  name    varchar(1000000)         not null unique,
  created timestamp with time zone not null
)
]]></Statement>

    <Statement>grant select, insert on categories to eigion</Statement>

    <Comment>
      The category_redactions table holds the set of categories that have been redacted.
    </Comment>

    <Statement><![CDATA[
create table category_redactions (
  category  bigint                   not null unique,
  reason    varchar(1000000)         not null,
  creator   uuid                     not null,
  created   timestamp with time zone not null,

  foreign key (creator)  references users (id),
  foreign key (category) references categories (id)
)
]]></Statement>

    <Statement>grant select, delete, insert on category_redactions to eigion</Statement>

    <Statement>grant select, insert on groups to eigion</Statement>

    <Comment>
      The products table holds product definitions.
    </Comment>

    <Statement><![CDATA[
create table products (
  id                        bigint                   not null primary key generated always as identity,
  product_group             bigint                   not null,
  product_name              varchar(1000000)         not null,
  product_title             varchar(1000000)         not null,
  product_description       varchar(1000000)         not null,
  product_description_type  varchar(1000000)         not null,
  created_by                uuid                     not null,
  created                   timestamp with time zone not null,

  unique (product_group, product_name),

  foreign key (product_group) references groups (id),
  foreign key (created_by)    references users (id)
)
]]></Statement>

    <Statement>grant select, insert on products to eigion</Statement>
    <Statement>grant update (product_title) on products to eigion</Statement>
    <Statement>grant update (product_description) on products to eigion</Statement>
    <Statement>grant update (product_description_type) on products to eigion</Statement>

    <Comment>
      The product_links table holds links associated with products.
    </Comment>

    <Statement><![CDATA[
create table product_links (
  product        bigint           not null,
  link_relation  varchar(1000000) not null,
  link_location  varchar(1000000) not null,

  foreign key (product) references products (id)
)
]]></Statement>

    <Statement>grant select, insert on product_links to eigion</Statement>

    <Comment>
      The product_redactions table holds the set of products that have been redacted.
    </Comment>

    <Statement><![CDATA[
create table product_redactions (
  product  bigint                   not null unique,
  reason   varchar(1000000)         not null,
  creator  uuid                     not null,
  created  timestamp with time zone not null,

  foreign key (creator) references users (id),
  foreign key (product) references products (id)
)
]]></Statement>

    <Statement>grant select, delete, insert on product_redactions to eigion</Statement>

    <Comment>
      The product_releases table holds product releases.
    </Comment>

    <Statement><![CDATA[
create table product_releases (
  id                  bigint                   not null primary key generated always as identity,
  product_id          bigint                   not null,
  version_major       bigint                   not null,
  version_minor       bigint                   not null,
  version_patch       bigint                   not null,
  version_qualifier   varchar(1000000)         not null,
  manifest            bytea                    not null,
  manifest_type       varchar(1000000)         not null,
  created_by          uuid                     not null,
  created             timestamp with time zone not null,

  unique (product_id, version_major, version_minor, version_patch, version_qualifier),

  foreign key (product_id) references products (id),
  foreign key (created_by) references users (id)
)
]]></Statement>

    <Statement>grant select, insert on product_releases to eigion</Statement>

    <Comment>
      The product_release_redactions table holds the set of product releases that have been redacted.
    </Comment>

    <Statement><![CDATA[
create table product_release_redactions (
  release  bigint                   not null unique,
  reason   varchar(1000000)         not null,
  creator  uuid                     not null,
  created  timestamp with time zone not null,

  foreign key (creator) references users (id),
  foreign key (release) references product_releases (id)
)
]]></Statement>

    <Statement>grant select, delete, insert on product_release_redactions to eigion</Statement>

    <Comment>
      The product_categories table associates products with categories.
    </Comment>

    <Statement><![CDATA[
create table product_categories (
  category_id      bigint not null,
  category_product bigint not null,

  primary key (category_id, category_product),
  foreign key (category_id)      references categories (id),
  foreign key (category_product) references products (id)
)
]]></Statement>

    <Statement>grant select, insert, delete on product_categories to eigion</Statement>
  </Schema>

</Schemas>
