<?xml version="1.0" encoding="UTF-8" ?>

<Schemas xmlns="urn:com.io7m.trasco.database.statements:1:0">
  <Schema versionCurrent="0">
    <Comment>
      The eigion role is a least-privilege role that can perform only those operations required to run the system and no
      others.
    </Comment>

    <Statement><![CDATA[
create role eigion with nosuperuser nocreatedb nocreaterole noinherit nologin;
]]></Statement>

    <Comment>
      The eigion_none role is a no-privilege role that cannot perform any actions.
    </Comment>

    <Statement><![CDATA[
create role eigion_none with nosuperuser nocreatedb nocreaterole noinherit nologin;
]]></Statement>

    <Comment>
      The schema version table stores the current version of the database schema. Implementations are expected to query
      this table on connecting to the database in order to ensure that the calling code is compatible with the tables in
      the database.
    </Comment>

    <Statement><![CDATA[
create table schema_version (
  version_lock   char(1) not null default 'x',
  version_number bigint  not null,

  constraint check_lock_primary primary key (version_lock),
  constraint check_lock_locked check (version_lock = 'x')
)
]]></Statement>
  </Schema>

  <Schema versionCurrent="1">
    <Comment>
      The audit table stores a list of auditable events.
    </Comment>

    <Statement><![CDATA[
create table audit (
  id      bigint                   not null primary key generated always as identity,
  time    timestamp with time zone not null,
  type    varchar(64)              not null,
  message varchar(8192)            not null
)
]]></Statement>

    <Statement>grant insert, select on audit to eigion</Statement>

    <Comment>
      The users table stores the current set of users.
    </Comment>

    <Statement><![CDATA[
create table users (
  id             uuid                     not null primary key,
  name           varchar(64)              not null unique,
  email          varchar(256)             not null unique,
  created        timestamp with time zone not null,
  last_login     timestamp with time zone not null,
  password_algo  varchar(64)              not null,
  password_hash  varchar(256)             not null,
  password_salt  varchar(64)              not null
)
]]></Statement>

    <Statement>grant select, insert, update on users to eigion</Statement>

    <Comment>
      The user_bans table stores the set of users that might be banned for any reason.
    </Comment>

    <Statement><![CDATA[
create table user_bans (
  id       bigint                    not null primary key generated always as identity,
  user_id  uuid                      not null unique,
  expires  timestamp with time zone,
  reason   varchar(256)              not null,

  foreign key (user_id) references users (id)
)
]]></Statement>

    <Statement>grant select, insert, update, delete on user_bans to eigion</Statement>
  </Schema>

  <Schema versionCurrent="2">
    <Comment>
      The categories table holds the set of categories that can be applied to products. The "redacted" column, if set to
      a non-null value, specifies the reason a category has been redacted (such as having an offensive name). If the
      "redacted" column is null, the category is not redacted.
    </Comment>

    <Statement><![CDATA[
create table categories (
  id       bigint       not null primary key generated always as identity,
  name     varchar(64)  not null unique,
  redacted varchar(256)
)
]]></Statement>

    <Statement>grant select, insert, update on categories to eigion</Statement>

    <Comment>
      The products table holds product definitions. The "redacted" column, if set to a non-null value, specifies the
      reason a product has been redacted (such as having an offensive name). If the "redacted" column is null, the
      product is not redacted.
    </Comment>

    <Statement><![CDATA[
create table products (
  id             bigint        not null primary key generated always as identity,
  product_group  varchar(1024) not null,
  product_name   varchar(1024) not null,
  created_by     uuid          not null,
  redacted       varchar(256),

  unique (product_group, product_name),
  foreign key (created_by) references users (id)
)
]]></Statement>

    <Statement>grant select, insert on products to eigion</Statement>
    <Statement>grant update (redacted) on products to eigion</Statement>

    <Comment>
      The product_releases table holds product releases.
    </Comment>

    <Statement><![CDATA[
create table product_releases (
  id                  bigint       not null primary key generated always as identity,
  product_id          bigint       not null,
  version_major       bigint       not null,
  version_minor       bigint       not null,
  version_patch       bigint       not null,
  version_qualifier   varchar(64),
  manifest            bytea        not null,
  manifest_type       varchar(256) not null,

  unique (product_id, version_major, version_minor, version_patch, version_qualifier),
  foreign key (product_id) references products (id)
)
]]></Statement>

    <Statement>grant select, insert on product_releases to eigion</Statement>

    <Comment>
      The product_categories table associates products with categories.
    </Comment>

    <Statement><![CDATA[
create table product_categories (
  category_id      bigint not null,
  category_product bigint not null,

  primary key (category_id, category_product),
  foreign key (category_id)      references categories (id),
  foreign key (category_product) references products (id)
)
]]></Statement>

    <Statement>grant select, insert, delete on product_categories to eigion</Statement>
  </Schema>

</Schemas>