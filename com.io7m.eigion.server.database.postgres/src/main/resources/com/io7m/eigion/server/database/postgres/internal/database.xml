<?xml version="1.0" encoding="UTF-8" ?>

<Schemas xmlns="urn:com.io7m.trasco.database.statements:1:0">
  <Schema versionCurrent="0">
    <Comment>
      The eigion role is a least-privilege role that can perform only those operations required to run the system and
      no others.
    </Comment>

    <Statement><![CDATA[
create role eigion with nosuperuser nocreatedb nocreaterole noinherit nologin;
]]></Statement>

    <Comment>
      The eigion_none role is a no-privilege role that cannot perform any actions.
    </Comment>

    <Statement><![CDATA[
create role eigion_none with nosuperuser nocreatedb nocreaterole noinherit nologin;
]]></Statement>

    <Comment>
      The schema version table stores the current version of the database schema. Implementations are expected to query
      this table on connecting to the database in order to ensure that the calling code is compatible with the tables in
      the database.
    </Comment>

    <Statement><![CDATA[
create table schema_version (
  version_ban   char(1) not null default 'x',
  version_number bigint  not null,

  constraint check_ban_primary primary key (version_ban),
  constraint check_ban_baned check (version_ban = 'x')
)
]]></Statement>
  </Schema>

  <Schema versionCurrent="1">
    <Comment>
      The pg_trgm extension adds support for indexing columns in a manner that will improve the performance of
      "like" queries.
    </Comment>

    <Statement>
-- [jooq ignore start]
create extension pg_trgm;
-- [jooq ignore stop]
    </Statement>

    <Comment>
      The users table stores the current set of users.

      The permissions column is an array of values of com.io7m.eigion.model.EIPermission.
    </Comment>

    <Statement><![CDATA[
create table users (
  id          uuid      not null primary key,
  permissions integer[] not null
)
]]></Statement>

    <Statement>grant select, insert, update on users to eigion</Statement>

    <Comment>
      The audit table stores a list of auditable events. Who did it? What did they do? When did they do it?
    </Comment>

    <Statement><![CDATA[
create table audit (
  id             bigint                   not null primary key generated always as identity,
  user_id        uuid                     not null,
  time           timestamp with time zone not null,
  type           text                     not null,
  message        text                     not null,

  foreign key (user_id) references users (id)
)
]]></Statement>

    <Statement>grant insert, select on audit to eigion</Statement>

    <Comment>
      The groups table holds groups. A product is produced by exactly one group, and users may be in one or more
      groups. Although users cannot create groups directly, they may have groups created automatically by the system
      on their behalf.
    </Comment>

    <Statement><![CDATA[
create table groups (
  id       bigint                    not null primary key generated always as identity,
  name     varchar(256)              not null unique,
  creator  uuid                      not null,
  created  timestamp with time zone  not null,
  personal boolean                   not null,

  foreign key (creator) references users (id)
)
]]></Statement>

    <Statement>grant insert, select on groups to eigion</Statement>
    <Statement>grant update (name) on groups to eigion</Statement>

    <Comment>
      The groups_name_gin index attempts to speed up queries made on group name "like" queries.
      Group names are always lowercase, so case sensitivity doesn't matter.
    </Comment>

    <Statement>
-- [jooq ignore start]
create index groups_name_gin on groups using gin (name gin_trgm_ops);
-- [jooq ignore stop]
    </Statement>

    <Comment>
      The group_roles table associates users with groups. The roles field is an array of
      com.io7m.eigion.model.EIGroupRole values.
    </Comment>

    <Statement><![CDATA[
create table group_roles (
  group_id  bigint    not null,
  user_id   uuid      not null,
  roles     integer[] not null,

  foreign key (group_id) references groups (id),
  foreign key (user_id) references users (id),
  primary key (group_id, user_id)
)
]]></Statement>

    <Statement>grant insert, select on group_roles to eigion</Statement>
    <Statement>grant update (roles) on group_roles to eigion</Statement>

    <Comment>
      The groups_creation_requests table holds the set of groups that are in the process of being created but
      have not yet actually been created.
    </Comment>

    <Statement><![CDATA[
create type group_creation_request_status_t as enum ('IN_PROGRESS', 'SUCCEEDED', 'FAILED', 'CANCELLED')
]]></Statement>

    <Statement><![CDATA[
create table groups_creation_requests (
  group_token    varchar(64)                not null primary key,
  group_name     varchar(256)               not null,
  creator_user   uuid                       not null,
  created        timestamp with time zone   not null,
  completed      timestamp with time zone,
  status         varchar(16)                not null,
  message        text                       not null,

  constraint group_creation_in_progress_or_completed check (
    case when (status != 'IN_PROGRESS') then
      (completed is not null)
    end
  ),

  foreign key (creator_user) references users (id)
)
]]></Statement>

    <Statement>grant select, insert on groups_creation_requests to eigion</Statement>
    <Statement>grant update (status, message, completed) on groups_creation_requests to eigion</Statement>
  </Schema>

</Schemas>
